{
    "cLines":[
        "#include<stdio.h> ",
        "#include<stdlib.h> ",
        "#include<string.h> ",
        "int main(){ ",
        "char s[100]; ",
        "int len = strlen(s); ",
        "return 0; ",
        "FILE *fp; ",
        "fp = fopen(\"data.txt\",\"r\"); ",
        "printf(\"%s\",s); ",
        "struct LinkedList{ ",
        "int value; ",
        "struct LinkedList *right; ",
        "}; ",
        "struct LinkedList *getNode(int val){ ",
        "struct LinkedList *node=(struct LinkedList *)malloc(sizeof(struct LinkedList)); ",
        "node->val=val; ",
        "node->right=NULL; ",
        "return node; ",
        "} ",
        "void printLL(int n,struct LinkedList *node){ ",
        "for(int i=0; i<n; i++){ ",
        "printf(\"%d \",node->val); ",
        "node=node->right; ",
        "} ",
        "fseek(fp, -10, SEEK_END); ",
        "fclose(fp); ",
        "#include <unistd.h> ",
        "return 1; ",
        "pid_t p = fork(); ",
        "if(p==0){ ",
        "printf(\"This is child one part with pid and ppid %d and %d\n\",getpid(),getppid()); ",
        "} ",
        "else{ ",
        "printf(\"This is parent part with pid %d and child pid is %d\n\",getpid(),p); ",
        "wait(NULL); ",
        "} ",
        "exit(0); ",
        "int file_pipes[2]; ",
        "memset(buffer, '\\0', BUFSIZ); ",
        "if(!strcmp(s,t)){ ",
        "printf(\"strings are equal\\n\"); ",
        "} else{ ",
        "printf(\"strings are not equal\\n\"); ",
        "} ",
        "enum{ false, true}; ",
        "int dp[n+1][m+1]; ",
        "bool cmp(Activity a,Activity b){ ",
	    "return a.end < b.end; } ",
        "int n= sizeof(arr) / sizeof(arr[0]); ",
        "const int INF=100000000; ",
        "vector<int> dist(n,INF); ",
        "vector<vector<int>> edges; ",
        "for(auto v: edges){ ",
        "class Activity{ ",
        "public: ",
        "int start,end; ",
        "Activity(int val,int wt){ ",
        "start=val; ",
        "end=wt; ",
        "}}; ",
        "#include<bits/stdc++.h> ",
        "using namespace std; ",
        "unordered_set<int> vis; ",
        "vis.insert(0); ",
        "queue<int> q; ",
        "q.push(0); ",
        "int z = q.front(); ",
        "priority_queue <pair<int,int>, vector<pair<int,int>>, greater<pair<int,int>>> pq; ",
        "class DLLNode{ ",
        "public: ",
        "DLLNode *left; ",
        "DLLNode *right; ",
        "int data; ",
        "DLLNode(int val){ ",
        "data=val; ",
        "}}; ",
        "#include <vector> "
        
        
    ]
}