{
    "pythonLines":[
        "class Heap(): ",
        "def __init__(self): ",
        "for i in range(n): ",
        "if i<10: ",
        "print('hello world') ",
        "global i ",
        "a,b = b,a ",
        "a,b,*c = [1,2,3,4,5] ",
        "print(a,b,c) ",
        "s = sum([i for i in arr if i%2 == 0]) ",
        "a = [1,2,3,4,5] ",
        "del a[1::2] ",
        "l = list(map(int, input().split())) ",
        "l = [i for i in range(0,10)] ",
        "l = list(map(int,input().split())) ",
        "ispalindrome = text == text[::-1] ",
        "sq = lambda x: x * x ",
        "if n in arr: ",
        "import math ",
        "fact = math.factorial(n) ",
        "transpose = [list(i) for i in zip(*a)] ",
        "import random ",
        "random.choice(['Head','Tail']) ",
        "fact = reduce(lambda x, y: x * y, range(1, n+1)) ",
        "import sys ",
        "def main(): ",
        "for _ in range(int(input())): ",
        "n,m = map(int, input().split()) ",
        "graph = [[] for _ in range(n+1)] ",
        "for _ in range(m): ",
        "a,b,c = map(int, input().split()) ",
        "graph[a].append((c,b)) ",
        "visited = [0]*(n+1) ",
        "if __name__ == '__main__': ",
        "if any(arr): ",
        "from collections import Counter ",
        "c = Counter(arr) ",
        "if i not in c: ",
        "import sys ",
        "sys.setrecursionlimit(100000) ",
        "from heapq import * ",
        "heapify(heap) ",
        "m = heappop(heap) ",
        "heappush(heap, m) ",
        "while True: ",
        "# this is a comment line ",
        "mod = 10**9+7 ",
        "import os ",
        "input = sys.stdin.readline() ",
        "st = set(arr) ",
        "class Heap: ",
        "def __init__(self): ",
        "self.arr = [] ",
        "def isEmpty(self): ",
        "return True if self.size == 0 else False ",
        "max_element = max(arr) ",
        "class Node: ",
        "def __init__(slef, key): ",
        "self.key = key ",
        "self.next = None ",
        "heap = arr[:k+1] ",
        "l,h = 1,n ",
        "while l<=h: ",
        "mid = (l+h)>>1 ",
        "if arr[mid] <= arr[i]: ",
        "l = mid+1 ",
        "else: ",
        "h = mid-1 ",
        "top = stack.pop() ",
        "return ans ",
        "def size(self,head): ",
        "ans = 1 ",
        "while head.next: ",
        "ans += 1 ",
        "head = head.next ",
        "return ans ",
        "file = open('input.txt', 'r+') ",
        "wr = open('output.txt', 'r+') ",
        "arr = file.readlines() ",
        "arr = [i.strip() for i in arr] ",
        "try: ",
        "print(0/0) ",
        "except Exception as e: ",
        "print(e) ",
        "else: ",
        "print(\"No exception in this \") ",
        "finally: ",
        "print(\"This will run in every case \") ",
        "t = s.lstrip('0') ",
        "s = sys.argv ",
        "print(ord('a')) ",
        "print(chr(92)) ",
        "print('%.2f'%a) ",
        "alphabets = {chr(i+97):i+1 for i in range(26)} ",
        "dp = [[0 for _ in range(n)] for _ in range(n)] ",
        "import tkinter ",
        "window = tkinter.Tk() ",
        "window.mainloop() ",
        "global x,y ",
        "nonlocal x,y "

    ]
}